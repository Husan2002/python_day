""" 1) Генерирование списка с помощью map и lambda
"""
# **Напишите программу, которая должна:**

# - Запросить у пользователя длину списка **len**

# - Сгенерировать список **lst** длиной **len** со случайными целыми числами **от 1 до 10 включительно**.



print((lambda a, b: a + b)((float(input('enter number: '))),(float(input('enter number: ')))))

# - Сгенерировать список **new_lst**, состоящий из чисел списка **lst**, **возведенных в квадрат**. Обязательно используйте функции **map** и инструкцию **lambda**!
# - Вывести на экран список **lst**
# - Вывести на экран список **new_lst**

# **Требования**:

# - Оформите логику в 2 отдельные функции **generate_list_with_random_numbers()** и **generate_list_with_squared_numbers()**:
#     1. **generate_list_with_random_numbers()** принимает длину списка и возвращает список со случайными целыми числами
#     2. **generate_list_with_squared_numbers()** принимает список и возвращает новый список с числами, **возведенными в квадрат**. Обязательно используйте инструкцию **lambda** и функцию **map**. **Другие варианты приниматься не будут!**
# - Используйте конструкцию **if __name__ == "__main__":** при написании программы

# **Формат входных данных:**

# Целое число **x**.

# **Формат выходных данных:**

# Вывод списка из случайных чисел длиной **x**.

# Вывод списка из чисел предыдущего списка, **возведенных в квадрат**

# **Пример входных данных:**

# ```python
# 5

# Пример выходных данных:

# python
# [1, 5, 3, 7, 3]
# [1, 25, 9, 49, 9]






""" 2)Задача B. Фильтрация списка с помощью filter и инструкции lambda
"""

# Напишите программу, которая должна:

# - Запросить у пользователя список чисел через пробел.
# - Сгенерировать список lst из этих чисел.
# - Сгенерировать список new_lst, состоящий из всех чисел списка lst, которые больше 5. Обязательно используйте функцию filter и инструкцию lambda!
# - Вывести на экран список lst
# - Вывести на экран список new_lst

# Требования:

# - Оформите логику в 2 отдельные функции generate_list_with_numbers_from_string() и generate_list_with_numbers_gt_5():
#     1. generate_list_with_numbers_from_string() принимает строку из чисел и возвращает список с целыми числами из этой строки. Отсортируйте список от меньшего к большему!
#     2. generate_list_with_numbers_gt_5() принимает список и возвращает новый список с числами, которые больше 5. Отсортируйте список от большего к меньшему!**Обязательно используйте инструкцию **lambda и функцию filter. Другие варианты приниматься не будут!
# - Используйте конструкцию if __name__ == "__main__": при написании программы

# Формат входных данных:

# Целые числа через пробел.

# Формат выходных данных:

# Вывод списка из полученных от пользователя чисел.

# Вывод списка из всех чисел из предыдущего списка, которые больше 5.

# Пример входных данных:

# python
# 5 10 20 3 8

# Пример выходных данных:

# python
# [3, 5, 8, 10, 20]
# [20, 10, 8]








"""Задача 3. Сумма чисел в диапазоне
"""

# Напишите программу, которая должна:

# - Запросить у пользователя нижнюю границу диапазона x.
# - Запросить у пользователя верхнюю границу диапазона y.
# - Просчитать сумму четных чисел в диапазоне от x до y. Используйте reduce и lambda!
# - Просчитать сумму нечетных чисел в диапазоне от x до y. Используйте reduce и lambda!
# - Поделить сумму четных чисел на сумму нечетных чисел.
# - Вывести сумму четных чисел
# - Вывести сумму нечетных чисел
# - Вывести результат деления суммы четных чисел на сумму нечетных чисел. Результат округлить до 3 чисел после запятой.

# Требования:

# - Оформите логику в 2 отдельные функции calculate_sum_of_even_nums() и calculate_sum_of_odd_nums():
#     1. calculate_sum_of_even_nums() принимает нижнюю и верхнюю границу диапазона и возвращает сумму четных чисел. Используйте функцию reduce из модуля functools!
#     2. calculate_sum_of_odd_nums() принимает нижнюю и верхнюю границу диапазона и возвращает сумму нечетных чисел. Используйте функцию reduce из модуля functools!
# - Используйте конструкцию if __name__ == "__main__": при написании программы.

# Формат входных данных:

# Нижняя граница диапазона x

# Верхняя граница диапазона y

# Формат выходных данных:

# Вывод суммы четных чисел.

# Вывод суммы нечетных чисел.